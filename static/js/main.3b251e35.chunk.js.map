{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","label","className","s","type","onClick","payload","Notification","message","initialState","reducer","state","action","Error","App","useReducer","dispatch","countTotalFeedback","Object","values","reduce","acc","value","keys","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4PAgBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OACI,oCACKD,GAAS,6BAAKA,IACdC,MCgBEC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCgBGC,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAAAC,GAAK,OACd,wBACIC,UAAWC,IAAEF,MAEbG,KAAK,SACLC,QAAS,kBAAMN,EAAgB,CAAEK,KAAMH,EAAOK,QAAS,KAJ3D,SAMKL,GAJIA,SCCVM,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OAAO,4BAAIA,KCGTC,EAAe,CACjBjB,KAAM,EACNC,QAAS,EACTC,IAAK,GAGT,SAASgB,EAAQC,EAAOC,GACpB,OAAQA,EAAOR,MACX,IAAK,OACD,OAAO,2BAAKO,GAAZ,IAAmBnB,KAAMmB,EAAMnB,KAAOoB,EAAON,UAEjD,IAAK,UACD,OAAO,2BAAKK,GAAZ,IAAmBlB,QAASkB,EAAMlB,QAAUmB,EAAON,UAEvD,IAAK,MACD,OAAO,2BAAKK,GAAZ,IAAmBjB,IAAKiB,EAAMjB,IAAMkB,EAAON,UAE/C,QACI,MAAM,IAAIO,MAAJ,mCAAsCD,EAAOR,QAuChDU,MAnCf,WACI,MAA0BC,qBAAWL,EAASD,GAA9C,mBAAOE,EAAP,KAAcK,EAAd,KAEMC,EAAqB,kBACvBC,OAAOC,OAAOR,GAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,MAKtD,OACI,qCACI,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACI,cAAC,EAAD,CACIS,QAASoB,OAAOK,KAAKZ,GACrBZ,gBAAiBiB,MAIzB,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACK4B,IACG,cAAC,EAAD,CACIzB,KAAMmB,EAAMnB,KACZC,QAASkB,EAAMlB,QACfC,IAAKiB,EAAMjB,IACXC,MAAOsB,IACPrB,mBAlBhB4B,KAAKC,MAAoB,IAAbd,EAAMnB,KAAcyB,MAAyB,IAqB7C,cAAC,EAAD,CAAcT,QAAQ,4BClD1CkB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCT5BC,EAAOC,QAAU,CAAC,MAAQ,kC","file":"static/js/main.3b251e35.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n    return (\n        <section>\n            {title && <h2>{title}</h2>}\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n        <>\n            <p>Good: {good}</p>\n            <p>Neutral: {neutral}</p>\n            <p>Bad: {bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive feedback: {positivePercentage}%</p>\n        </>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n    return (\n        <>\n            {options.map(label => (\n                <button\n                    className={s.label}\n                    key={label}\n                    type=\"button\"\n                    onClick={() => onLeaveFeedback({ type: label, payload: 1 })}\n                >\n                    {label}\n                </button>\n            ))}\n        </>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n    return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useReducer } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nconst initialState = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n};\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'good':\n            return { ...state, good: state.good + action.payload };\n\n        case 'neutral':\n            return { ...state, neutral: state.neutral + action.payload };\n\n        case 'bad':\n            return { ...state, bad: state.bad + action.payload };\n\n        default:\n            throw new Error(`Unsupported action type: ${action.type}`);\n    }\n}\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const countTotalFeedback = () =>\n        Object.values(state).reduce((acc, value) => acc + value);\n\n    const countPositiveFeedbackPercentage = () =>\n        Math.round((state.good * 100) / countTotalFeedback()) || 0;\n\n    return (\n        <>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions\n                    options={Object.keys(state)}\n                    onLeaveFeedback={dispatch}\n                />\n            </Section>\n\n            <Section title=\"Statistics\">\n                {countTotalFeedback() ? (\n                    <Statistics\n                        good={state.good}\n                        neutral={state.neutral}\n                        bad={state.bad}\n                        total={countTotalFeedback()}\n                        positivePercentage={countPositiveFeedbackPercentage()}\n                    />\n                ) : (\n                    <Notification message=\"No feedback given\" />\n                )}\n            </Section>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FeedbackOptions_label__1qGXW\"};"],"sourceRoot":""}